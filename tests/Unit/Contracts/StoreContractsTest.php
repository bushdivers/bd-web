<?php

namespace Tests\Unit\Contracts;

use App\Services\Contracts\StoreContracts;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class StoreContractsTest extends TestCase
{
    use RefreshDatabase;

    protected StoreContracts $storeContracts;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->storeContracts = app()->make(StoreContracts::class);
    }

    /**
     * A basic unit test example.
     */
    public function test_contract_with_one_leg_stored(): void
    {
        $contractData = [
            [
                'header' => [
                    'origin_airport_id' => 'AYMR',
                    'total_distance' => 100,
                    'legs' => 1,
                    'total_payload' => 1000,
                    'total_pax' => 0,
                    'contract_value' => 1000,
                    'expires_at' => Carbon::now()
                ],
                'contract_legs' => [
                    [
                        'cargo_type' => 1,
                        'dep_airport_id' => 'AYMR',
                        'arr_airport_id' => 'AYMN',
                        'current_airport_id' => 'AYMR',
                        'cargo_desc' => 'Cargo',
                        'cargo_qty' => 1000,
                        'distance' => 50,
                        'heading' => 70
                    ]
                ]
            ]
        ];
        $this->storeContracts->execute($contractData);
        $this->assertDatabaseHas('contracts', [
            'origin_airport_id' => 'AYMR'
        ]);
        $this->assertDatabaseCount('contract_legs', 1);
    }

    public function test_contract_with_two_legs_stored(): void
    {
        $contractData = [
            [
                'header' => [
                    'origin_airport_id' => 'AYMR',
                    'total_distance' => 100,
                    'legs' => 1,
                    'total_payload' => 1000,
                    'total_pax' => 0,
                    'contract_value' => 1000,
                    'expires_at' => Carbon::now()
                ],
                'contract_legs' => [
                    [
                        'cargo_type' => 1,
                        'dep_airport_id' => 'AYMR',
                        'arr_airport_id' => 'AYMN',
                        'current_airport_id' => 'AYMR',
                        'cargo_desc' => 'Cargo',
                        'cargo_qty' => 1000,
                        'distance' => 50,
                        'heading' => 70
                    ],
                    [
                        'cargo_type' => 1,
                        'dep_airport_id' => 'AYMR',
                        'arr_airport_id' => 'AYMN',
                        'current_airport_id' => 'AYMR',
                        'cargo_desc' => 'Cargo',
                        'cargo_qty' => 1000,
                        'distance' => 50,
                        'heading' => 70
                    ]
                ]
            ]
        ];
        $this->storeContracts->execute($contractData);
        $this->assertDatabaseHas('contracts', [
            'origin_airport_id' => 'AYMR'
        ]);
        $this->assertDatabaseCount('contract_legs', 2);
    }
}
