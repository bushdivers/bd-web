<?php

namespace Tests\Unit\Contracts;

use App\Services\Contracts\CalContractValue;
use PHPUnit\Framework\TestCase;

class CalContractValueTest extends TestCase
{
    protected CalContractValue $calContractValue;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->calContractValue = app()->make(CalContractValue::class);
    }

    /**
     * A basic unit test example.
     */
    public function test_contract_value_is_calculated_for_one_cargo_leg(): void
    {
        $legs = [
            ['cargo_type' => 1, 'cargo_qty' => 1000, 'distance' => 50]
        ];
        $value = $this->calContractValue->execute($legs);
        $this->assertEquals(1360, $value);
    }

    public function test_contract_value_is_calculated_for_one_pax_leg(): void
    {
        $legs = [
            ['cargo_type' => 2, 'cargo_qty' => 2, 'distance' => 50]
        ];
        $value = $this->calContractValue->execute($legs);
        $this->assertEquals(540, $value);
    }

    public function test_contract_value_is_calculated_for_two_cargo_legs(): void
    {
        $legs = [
            ['cargo_type' => 1, 'cargo_qty' => 1000, 'distance' => 50],
            ['cargo_type' => 1, 'cargo_qty' => 1000, 'distance' => 50]
        ];
        $value = $this->calContractValue->execute($legs);
        $this->assertEquals(2720, $value);
    }

    public function test_contract_value_is_calculated_for_two_pax_legs(): void
    {
        $legs = [
            ['cargo_type' => 2, 'cargo_qty' => 2, 'distance' => 50],
            ['cargo_type' => 2, 'cargo_qty' => 2, 'distance' => 50]
        ];
        $value = $this->calContractValue->execute($legs);
        $this->assertEquals(1080, $value);
    }
}
